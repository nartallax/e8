{
  "name": "@nartallax/e8",
  "version": "0.0.1",
  "description": "2d game engine",
  "author": "Nartallax",
  "license": "0BSD",
  "types": "e8.d.ts",
  "main": "e8.js",
  "type": "module",
  "scripts": {
    "typecheck": "cd src && npx tsc --noEmit && cd - > /dev/null",
    "test": "npm run test:prepare && npm run typecheck && npm run test:generate && npm run test:build && npm run test:run",
    "test:prepare": "rm -f src/generated/test.ts",
    "test:generate": "npx clamsensor_codegen src src/generated/test.ts",
    "test:build": "npx parcel build --target test --no-cache",
    "test:run": "node ./dist/test/test.js",
    "build": "npm run build:prepare && npm run build:build && npm run dts && npm run build:copy_static",
    "build:prepare": "rm -rf ./target && rm -rf ./dist && mkdir ./target",
    "build:build": "npx parcel build --target release --no-cache && cp ./dist/release/main.js ./target/e8.js",
    "build:copy_static": "cp ./LICENSE ./target/ && cp ./README.md ./target && cp ./package-lock.json ./target && npm run build:cut_package",
    "build:cut_package": "npx package-cutter --output ./target/package.json",
    "dts": "npm run dts:generate && npm run dts:cleanup",
    "dts:generate": "npx parcel build --target types --no-cache",
    "dts:cleanup": "mv ./e8.d.ts ./target/e8.d.ts",
    "pack": "npm run build && cd target && npm pack && mv *.tgz e8.tgz"
  },
  "devDependencies": {
    "@nartallax/clamsensor": "^2.0.10",
    "@nartallax/package-cutter": "^1.0.2",
    "@parcel/packager-ts": "^2.12.0",
    "@parcel/plugin": "^2.12.0",
    "@parcel/transformer-typescript-types": "^2.12.0",
    "@types/chai": "^4.3.6",
    "@types/rbush": "^3.0.0",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "chai": "^4.3.8",
    "eslint": "^8.49.0",
    "parcel": "^2.12.0",
    "parcel-resolver-ts-base-url": "^1.3.1",
    "typescript": "^5.4.5"
  },
  "dependencies": {
    "rbush": "^3.0.1"
  },
  "targets": {
    "release": {
      "source": "src/main.ts",
      "context": "node",
      "isLibrary": true,
      "optimize": true,
      "outputFormat": "esmodule"
    },
    "test": {
      "source": "src/generated/test.ts",
      "context": "node",
      "optimize": false,
      "outputFormat": "esmodule"
    },
    "types": {
      "source": "src/main.ts",
      "sourceMap": false
    }
  }
}
